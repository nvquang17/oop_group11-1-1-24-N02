/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI;

import DAO.SinhVienDAO;
import DAO.SinhVienMonHocDAO;
import DTO.SinhVienDTO;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;

public class SinhVienGUI extends javax.swing.JPanel {

    /**
     * Creates new form SinhVienGUI
     */
    SinhVienDAO sinhVienDAO;
   private SinhVienMonHocDAO sinhVienMonHocDAO;
    public SinhVienGUI() {
        initComponents();
        sinhVienDAO = new SinhVienDAO();
        sinhVienMonHocDAO = new SinhVienMonHocDAO();
        updateTable();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtTenSinhVien = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtGioiTinh = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtNgaySinh = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtDiaChi = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtSoDienThoai = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        txtMaSinhVien = new javax.swing.JTextField();
        btnThem = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        txtMatKhau = new javax.swing.JPasswordField();
        btnLamMoi = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        txtDiem = new javax.swing.JTextField();
        btnLoc = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(765, 434));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setText("Mã sinh viên:");

        jLabel2.setText("Tên sinh viên:");

        jLabel3.setText("Mật khẩu:");

        jLabel4.setText("Giới tính:");

        jLabel5.setText("Ngày sinh:");

        jLabel6.setText("Địa chỉ:");

        jLabel7.setText("Số điện thoại:");

        jLabel8.setText("Email:");

        btnThem.setText("Thêm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        btnXoa.setText("Xóa");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnLamMoi.setText("Làm mới");
        btnLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLamMoiActionPerformed(evt);
            }
        });

        jLabel9.setText("Lọc theo điểm:");

        btnLoc.setText("Lọc");
        btnLoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLocActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(180, 180, 180)
                        .addComponent(btnThem)
                        .addGap(32, 32, 32)
                        .addComponent(btnSua)
                        .addGap(27, 27, 27)
                        .addComponent(btnXoa)
                        .addGap(18, 18, 18)
                        .addComponent(btnLamMoi))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(0, 0, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(txtDiem, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(btnLoc, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(22, 22, 22)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE))
                                            .addGap(6, 6, 6)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(txtNgaySinh)
                                                .addComponent(txtMatKhau)
                                                .addComponent(txtSoDienThoai)))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(txtMaSinhVien, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGap(45, 45, 45)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(txtGioiTinh, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtTenSinhVien, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(txtEmail, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 702, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(txtTenSinhVien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMaSinhVien, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtMatKhau, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(jLabel4)
                        .addComponent(txtGioiTinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtSoDienThoai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtDiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLoc))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnThem)
                    .addComponent(btnSua)
                    .addComponent(btnXoa)
                    .addComponent(btnLamMoi))
                .addGap(26, 26, 26))
        );
    }// </editor-fold>//GEN-END:initComponents
private void updateTable() {
        // Get the list of students from DAO
        List<SinhVienDTO> listSinhVien = sinhVienDAO.listSinhVien();
        SinhVienMonHocDAO sinhVienMonHocDAO = new SinhVienMonHocDAO(); // Initialize your DAO for scores

        // Define table columns, including the average score column
        String[] columnNames = {"Mã SV", "Tên SV", "Mật khẩu", "Giới tính", "Ngày sinh", "Địa chỉ", "SĐT", "Email", "Điểm trung bình"};

        // Create table data
        String[][] data = new String[listSinhVien.size()][9]; // Increased to 9 columns
        for (int i = 0; i < listSinhVien.size(); i++) {
            SinhVienDTO sinhVien = listSinhVien.get(i);
            data[i][0] = sinhVien.getMaSinhVien();
            data[i][1] = sinhVien.getTenSinhVien();
            data[i][2] = sinhVien.getMatKhau();
            data[i][3] = sinhVien.getGioiTinh();
            data[i][4] = sinhVien.getNgaySinh();
            data[i][5] = sinhVien.getDiaChi();
            data[i][6] = sinhVien.getSoDienThoai();
            data[i][7] = sinhVien.getEmail();

            // Calculate average score for each student
            Double diemTrungBinh = sinhVienMonHocDAO.calculateAverageScore(sinhVien.getMaSinhVien());
            data[i][8] = diemTrungBinh != null ? diemTrungBinh.toString() : "Chưa có điểm"; // Assign the average score
        }

        // Set table model
        jTable1.setModel(new javax.swing.table.DefaultTableModel(data, columnNames));
    }


    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // Lấy dòng được chọn
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow >= 0) {
            // Lấy mã sinh viên của sinh viên được chọn
            String maSinhVien = jTable1.getValueAt(selectedRow, 0).toString();

            // Hiển thị hộp thoại xác nhận
            int confirm = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xóa sinh viên này?",
                    "Xác nhận xóa", JOptionPane.YES_NO_OPTION);

            if (confirm == JOptionPane.YES_OPTION) {
                // Nếu người dùng chọn Yes, tiến hành xóa
                sinhVienDAO.deleteSinhVien(maSinhVien);
                clear();
                updateTable(); // Cập nhật lại bảng sau khi xóa
                JOptionPane.showMessageDialog(this, "Xóa sinh viên thành công.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn sinh viên để xóa.");
        }
    }//GEN-LAST:event_btnXoaActionPerformed
    // Hàm kiểm tra định dạng số điện thoại
    private boolean isValidPhoneNumber(String phone) {
        // Kiểm tra số điện thoại phải chứa từ 10-11 chữ số
        String phoneRegex = "^[0-9]{10,11}$";
        return Pattern.matches(phoneRegex, phone);
    }

    // Hàm kiểm tra định dạng email
    private boolean isValidEmail(String email) {
        // Kiểm tra email theo cấu trúc chuẩn
        String emailRegex = "^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$";
        return Pattern.matches(emailRegex, email);
    }

    // Hàm kiểm tra định dạng ngày sinh dd/MM/yyyy
    private boolean isValidDate(String date) {
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        sdf.setLenient(false); // Không cho phép ngày tháng không hợp lệ (vd: 32/13/2021)
        try {
            sdf.parse(date); // Nếu không lỗi, định dạng hợp lệ
            return true;
        } catch (ParseException e) {
            return false;
        }
    }
    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        String maSinhVien = txtMaSinhVien.getText();

        // Kiểm tra các trường thông tin có rỗng không
        if (maSinhVien.isEmpty() || txtTenSinhVien.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng điền đầy đủ các trường thông tin.");
            return;
        }

        // Kiểm tra trùng mã sinh viên
        SinhVienDTO existingSinhVien = sinhVienDAO.getSinhVienById(maSinhVien);
        if (existingSinhVien != null) {
            JOptionPane.showMessageDialog(this, "Mã sinh viên đã tồn tại. Vui lòng nhập mã sinh viên khác.");
            return;
        }

        // Kiểm tra ràng buộc số điện thoại
        String soDienThoai = txtSoDienThoai.getText();
        if (!isValidPhoneNumber(soDienThoai)) {
            JOptionPane.showMessageDialog(this, "Số điện thoại không hợp lệ. Vui lòng nhập số hợp lệ.");
            return;
        }

        // Kiểm tra ràng buộc email
        String email = txtEmail.getText();
        if (!isValidEmail(email)) {
            JOptionPane.showMessageDialog(this, "Email không hợp lệ. Vui lòng nhập email hợp lệ.");
            return;
        }

        // Kiểm tra ràng buộc ngày sinh theo định dạng dd/MM/yyyy
        String ngaySinh = txtNgaySinh.getText();
        if (!isValidDate(ngaySinh)) {
            JOptionPane.showMessageDialog(this, "Ngày sinh không hợp lệ. Vui lòng nhập theo định dạng dd/MM/yyyy.");
            return;
        }

        // Tạo mới đối tượng SinhVienDTO từ các trường thông tin
        SinhVienDTO newSinhVien = new SinhVienDTO(
                maSinhVien,
                txtTenSinhVien.getText(),
                new String(txtMatKhau.getPassword()),
                txtGioiTinh.getText(),
                ngaySinh,
                txtDiaChi.getText(),
                soDienThoai,
                email
        );

        // Thêm sinh viên mới vào DAO và cập nhật bảng
        sinhVienDAO.addSinhVien(newSinhVien);
        clear();
        updateTable();
        JOptionPane.showMessageDialog(this, "Thêm sinh viên thành công.");
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // Lấy dòng được chọn
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow >= 0) {
            String maSinhVien = txtMaSinhVien.getText();

            // Kiểm tra các trường thông tin có rỗng không
            if (maSinhVien.isEmpty() || txtTenSinhVien.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "Vui lòng điền đầy đủ các trường thông tin.");
                return;
            }

            // Kiểm tra ràng buộc số điện thoại
            String soDienThoai = txtSoDienThoai.getText();
            if (!isValidPhoneNumber(soDienThoai)) {
                JOptionPane.showMessageDialog(this, "Số điện thoại không hợp lệ. Vui lòng nhập số hợp lệ.");
                return;
            }

            // Kiểm tra ràng buộc email
            String email = txtEmail.getText();
            if (!isValidEmail(email)) {
                JOptionPane.showMessageDialog(this, "Email không hợp lệ. Vui lòng nhập email hợp lệ.");
                return;
            }

            // Kiểm tra ràng buộc ngày sinh theo định dạng dd/MM/yyyy
            String ngaySinh = txtNgaySinh.getText();
            if (!isValidDate(ngaySinh)) {
                JOptionPane.showMessageDialog(this, "Ngày sinh không hợp lệ. Vui lòng nhập theo định dạng dd/MM/yyyy.");
                return;
            }

            // Tạo đối tượng SinhVienDTO đã được cập nhật
            SinhVienDTO updatedSinhVien = new SinhVienDTO(
                    maSinhVien,
                    txtTenSinhVien.getText(),
                    new String(txtMatKhau.getPassword()),
                    txtGioiTinh.getText(),
                    ngaySinh,
                    txtDiaChi.getText(),
                    soDienThoai,
                    email
            );

            // Cập nhật sinh viên trong DAO và cập nhật bảng
            sinhVienDAO.updateSinhVien(updatedSinhVien);
            clear();
            updateTable();
            JOptionPane.showMessageDialog(this, "Cập nhật sinh viên thành công.");
        } else {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn sinh viên để sửa.");
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // Lấy dòng được chọn
        int row = jTable1.getSelectedRow();

        // Kiểm tra xem có dòng nào được chọn không
        if (row >= 0) {
            // Lấy dữ liệu từ các cột và kiểm tra dữ liệu null
            Object maSinhVien = jTable1.getValueAt(row, 0);
            Object tenSinhVien = jTable1.getValueAt(row, 1);
            Object matKhau = jTable1.getValueAt(row, 2);
            Object gioiTinh = jTable1.getValueAt(row, 3);
            Object ngaySinh = jTable1.getValueAt(row, 4);
            Object diaChi = jTable1.getValueAt(row, 5);
            Object soDienThoai = jTable1.getValueAt(row, 6);
            Object email = jTable1.getValueAt(row, 7);

            // Đặt giá trị cho các trường nhập, kiểm tra và gán giá trị chuỗi
            txtMaSinhVien.setText(maSinhVien != null ? maSinhVien.toString() : "");
            txtTenSinhVien.setText(tenSinhVien != null ? tenSinhVien.toString() : "");
            txtMatKhau.setText(matKhau != null ? matKhau.toString() : "");
            txtGioiTinh.setText(gioiTinh != null ? gioiTinh.toString() : "");
            txtNgaySinh.setText(ngaySinh != null ? ngaySinh.toString() : "");
            txtDiaChi.setText(diaChi != null ? diaChi.toString() : "");
            txtSoDienThoai.setText(soDienThoai != null ? soDienThoai.toString() : "");
            txtEmail.setText(email != null ? email.toString() : "");
        } else {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một dòng hợp lệ.");
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void clear() {
        txtMaSinhVien.setText("");
        txtTenSinhVien.setText("");
        txtMatKhau.setText("");
        txtGioiTinh.setText("");
        txtNgaySinh.setText("");
        txtDiaChi.setText("");
        txtSoDienThoai.setText("");
        txtEmail.setText("");

        // Xóa lựa chọn trong bảng
        jTable1.clearSelection();
    }
    private void btnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLamMoiActionPerformed
        clear();
        updateTable();
    }//GEN-LAST:event_btnLamMoiActionPerformed

    private void btnLocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLocActionPerformed
        // Retrieve the input from the txtDiem field
        String diemInput = txtDiem.getText();

        // Validate the input
        try {
            double diem = Double.parseDouble(diemInput); // Parse the input to double

            // Get the complete list of students
            List<SinhVienDTO> allStudents = sinhVienDAO.listSinhVien();

            // Filter the list based on the average score
            List<SinhVienDTO> filteredList = new ArrayList<>();
            for (SinhVienDTO sinhVien : allStudents) {
                Double diemTrungBinh = sinhVienMonHocDAO.calculateAverageScore(sinhVien.getMaSinhVien());
                // Check if the average score is greater than the input value
                if (diemTrungBinh != null && diemTrungBinh > diem) {
                    filteredList.add(sinhVien);
                }
            }

            // Define table columns
            String[] columnNames = {"Mã SV", "Tên SV", "Mật khẩu", "Giới tính", "Ngày sinh", "Địa chỉ", "SĐT", "Email", "Điểm trung bình"};

            // Create table data
            String[][] data = new String[filteredList.size()][9];
            for (int i = 0; i < filteredList.size(); i++) {
                SinhVienDTO sinhVien = filteredList.get(i);
                data[i][0] = sinhVien.getMaSinhVien();
                data[i][1] = sinhVien.getTenSinhVien();
                data[i][2] = sinhVien.getMatKhau();
                data[i][3] = sinhVien.getGioiTinh();
                data[i][4] = sinhVien.getNgaySinh();
                data[i][5] = sinhVien.getDiaChi();
                data[i][6] = sinhVien.getSoDienThoai();
                data[i][7] = sinhVien.getEmail();

                // Calculate average score for each student
                Double diemTrungBinh = sinhVienMonHocDAO.calculateAverageScore(sinhVien.getMaSinhVien());
                data[i][8] = diemTrungBinh != null ? diemTrungBinh.toString() : "Chưa có điểm";
            }

            // Set table model
            jTable1.setModel(new javax.swing.table.DefaultTableModel(data, columnNames));

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập một số hợp lệ cho điểm.", "Lỗi nhập liệu", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnLocActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLamMoi;
    private javax.swing.JButton btnLoc;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtDiaChi;
    private javax.swing.JTextField txtDiem;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtGioiTinh;
    private javax.swing.JTextField txtMaSinhVien;
    private javax.swing.JPasswordField txtMatKhau;
    private javax.swing.JTextField txtNgaySinh;
    private javax.swing.JTextField txtSoDienThoai;
    private javax.swing.JTextField txtTenSinhVien;
    // End of variables declaration//GEN-END:variables
}
